version: "3"

interval: 500ms

env:
  DIR: "cd ${PWD} &&"
  PDF_FILE: pdf_doc.pdf
  HTML_FILE: html_doc.html

  MARKFILE: markdown_doc.md
tasks:
  ## Pandoc | Docker ##########################################################
  pandoc:docker-build:
    cmds:
      - "{{.DIR}} docker build --tag docker.io/library/pandoc --file src/pandoc.dockerfile ."

  pandoc:exec:
    cmds:
      - |
        {{.DIR}} docker run \
        --rm \
        -v ${PWD}/bin:/workspace \
        -w /workspace \
        docker.io/library/pandoc \
        --pdf-engine=weasyprint \
        -f markdown -c style.css \
        --metadata 'title={{.TITLE}}' \
        {{.MARKFILE}} -t {{.TYPE}} -o {{.OUTFILE}} --embed-resources --standalone

  pandoc:pdf:
    cmds:
      - task: pandoc:exec
        vars: 
          TYPE: pdf
          OUTFILE: "{{.PDF_FILE}}"
        
  pandoc:html:
    cmds:
      - task: pandoc:exec
        vars: 
          TYPE: html5
          OUTFILE: "{{.HTML_FILE}}"

  pandoc:all:
    cmds:
    - task: pandoc:docker-build
    - task: pandoc:html
    - task: pandoc:pdf

  ## SASS | TS -> JSON -> Markdown ############################################
  fmt:ts-to-json:
    cmds:
      - cmd: "{{.DIR}} deno task to-json"
  fmt:json-to-markdown:
    cmds:
      - cmd: "{{.DIR}} deno task to-markdown"

  sass:
    cmd: "{{.DIR}} sass src/style.scss bin/style.css"

  run-all:
    cmds:
      - task: fmt:ts-to-json
      - task: fmt:json-to-markdown
      - task: sass
      - task: pandoc:docker-build
      - task: pandoc:html
      - task: pandoc:pdf
      - task: print-result-msg

  dev:
    watch: true
    cmds:
      - task: sass
      - task: pandoc:html
      - task: pandoc:pdf
    sources:
      - "src/**/*"
      - "inputs/**/*"
  
  print-result-msg:
    cmds:
    - cmd: "stat -t bin/{{.HTML_FILE}}"
    - cmd: "stat -t bin/{{.PDF_FILE}}"
    - cmd: "echo ' > open bin/{{.HTML_FILE}}'"
    - cmd: "echo ' > open bin/{{.PDF_FILE}}'"

  ## Tests ####################################################################

  test:most-recent-output-filenames:
    cmds:
    - cmd: "{{.DIR}} ls -aS1 bin | head -n 2 | grep pdf | { read NAME; test $NAME = '{{.PDF_FILE}}'; }"
    - cmd: "{{.DIR}} ls -aS1 bin | head -n 2 | grep html | { read NAME; test $NAME = '{{.HTML_FILE}}'; }"
  
  test:readme-get-started:
    cmds:
    - cmd: "{{.DIR}} grep 'task run-all' README.md | wc -l | { read C; test $C = 1; }"
    - task: run-all
    - task: test:most-recent-output-filenames
    - task: print-result-msg

  test:
    cmds:
    - task: test:readme-get-started
  # run:
  #   cmds:
  #     - task: pandoc:html
